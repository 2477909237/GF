//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace cfg.cfg
{
public partial class actor :  UnityGameFramework.Runtime.DataRowBase 
{

    public override int Id
        {
            get => 1456815083;
        }


    /// <summary>
    /// id
    /// </summary>
    public int ID { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 背景
    /// </summary>
    public string Dec { get; private set; }
    /// <summary>
    /// 血量
    /// </summary>
    public int HP { get; private set; }
    /// <summary>
    /// 蓝量
    /// </summary>
    public int MP { get; private set; }
    /// <summary>
    /// 攻击力
    /// </summary>
    public int Attack { get; private set; }
    /// <summary>
    /// 防御力
    /// </summary>
    public int Defensive { get; private set; }
    /// <summary>
    /// 角色类型
    /// </summary>
    public cfg.EActorType ActorType { get; private set; }




    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "Name:" + Name + ","
        + "Dec:" + Dec + ","
        + "HP:" + HP + ","
        + "MP:" + MP + ","
        + "Attack:" + Attack + ","
        + "Defensive:" + Defensive + ","
        + "ActorType:" + ActorType + ","
        + "}";
    }

    /// <summary>                                       
    /// 解析数据表行。                                         
    /// </summary>                                      
    /// <param name="dataRowString">要解析的数据表行字符串。</param>
    /// <param name="userData">用户自定义数据。</param>         
    /// <returns>是否解析数据表行成功。</returns>                  
    public override bool ParseDataRow(string dataRowString, object userData)
    {
        return base.ParseDataRow(dataRowString, userData);
    }    

    /// <summary>
    /// 解析数据表行。
    /// </summary>
    /// <param name="dataRowBytes">要解析的数据表行二进制流。</param>
    /// <param name="startIndex">数据表行二进制流的起始位置。</param>
    /// <param name="length">数据表行二进制流的长度。</param>
    /// <param name="userData">用户自定义数据。</param>
    /// <returns>是否解析数据表行成功。</returns>
    public override bool ParseDataRow(byte[] dataRowBytes, int startIndex, int length, object userData)
    {
        ByteBuf _buf = userData as ByteBuf;
        if (_buf == null)
            return false;
        ID = _buf.ReadInt();
        Name = _buf.ReadString();
        Dec = _buf.ReadString();
        HP = _buf.ReadInt();
        MP = _buf.ReadInt();
        Attack = _buf.ReadInt();
        Defensive = _buf.ReadInt();
        ActorType = (cfg.EActorType)_buf.ReadInt();
        return true;
    }
}

}